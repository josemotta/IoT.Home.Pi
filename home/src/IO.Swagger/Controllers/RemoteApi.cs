/*
 * home
 *
 * The API for the Home Starter project
 *
 * OpenAPI spec version: 1.0.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class RemoteApiController : Controller
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>returns ir code from remote</remarks>
        /// <param name="remote">Lirc remote</param>
        /// <param name="code">ir code</param>
        /// <response code="200">All the codes</response>
        [HttpGet]
        [Route("/motta/home/1.0.3/remotes/{remote}/{code}")]
        [ValidateModelState]
        [SwaggerOperation("GetRemoteCode")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<string>), description: "All the codes")]
        public virtual IActionResult GetRemoteCode([FromRoute][Required]string remote, [FromRoute][Required]string code)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<string>));

            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
            : default(List<string>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>returns all ir codes from remote</remarks>
        /// <param name="remote">Lirc remote</param>
        /// <response code="200">All the codes</response>
        [HttpGet]
        [Route("/motta/home/1.0.3/remotes/{remote}")]
        [ValidateModelState]
        [SwaggerOperation("GetRemoteCodes")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<string>), description: "All the codes")]
        public virtual IActionResult GetRemoteCodes([FromRoute][Required]string remote)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<string>));

            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
            : default(List<string>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>returns all installed remotes</remarks>
        /// <param name="skip">number of records to skip</param>
        /// <param name="limit">max number of records to return</param>
        /// <response code="200">All the installed remotes</response>
        [HttpGet]
        [Route("/motta/home/1.0.3/remotes")]
        [ValidateModelState]
        [SwaggerOperation("GetRemotes")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<string>), description: "All the installed remotes")]
        public virtual IActionResult GetRemotes([FromQuery]int? skip, [FromQuery]int? limit)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<string>));

            string exampleJson = null;
            exampleJson = "[ \"\", \"\" ]";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
            : default(List<string>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>flashes ir code simulating the remote control</remarks>
        /// <param name="remote">Lirc remote</param>
        /// <param name="code">ir code</param>
        /// <response code="200">response</response>
        [HttpPost]
        [Route("/motta/home/1.0.3/remotes/{remote}/{code}")]
        [ValidateModelState]
        [SwaggerOperation("SendRemoteCode")]
        [SwaggerResponse(statusCode: 200, type: typeof(ApiResponse), description: "response")]
        public virtual IActionResult SendRemoteCode([FromRoute][Required]string remote, [FromRoute][Required]string code)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ApiResponse));

            string exampleJson = null;
            exampleJson = "{\n  \"code\" : 0,\n  \"message\" : \"everything is ok\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ApiResponse>(exampleJson)
            : default(ApiResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
